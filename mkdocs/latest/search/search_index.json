{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Projector \u00b6 Projector is a technology to run and access Swing GUI applications remotely. Here you can find Projector documentation. Use the navigation menu to move between pages. Work in progress This documentation is in very initial state. We are currently focused on improving it.","title":"Home"},{"location":"#welcome-to-projector","text":"Projector is a technology to run and access Swing GUI applications remotely. Here you can find Projector documentation. Use the navigation menu to move between pages. Work in progress This documentation is in very initial state. We are currently focused on improving it.","title":"Welcome to Projector"},{"location":"about/coc/","text":"This project and the corresponding community is governed by the JetBrains Open Source and Community Code of Conduct . Please make sure you read it.","title":"Code of conduct"},{"location":"about/contributing/","text":"Thank you for reading this: we welcome any contributions. All Projector-related projects have the same contributing guidelines. This is the place where they are described. Creating an issue \u00b6 You can create issues in our issue tracker . If you report a bug , please either describe reproduction steps or mention that you don't know how to reproduce it stably. You can also suggest a feature . If you've found the same ticket, please avoid creating a duplicate. Better vote (and comment with more info) for the existing! Submitting changes \u00b6 If you want to resolve an issue submitted in the issue tracker or propose a minor edit , open a Pull Request. Better don't include multiple changes in a single PR, create separate. Pre-commit actions . Before committing, please ensure that code style is correct. If you use IntelliJ IDEA, you can just select the following checkboxes of \"Before Commit\" actions: Reformat code Rearrange code Optimize imports Cleanup Commits naming . If there are issues that you address, please mention them in the prefix of commit messages. Usually, a commit name starts with a verb. Example: PRJ-68 Make clipboard owners lose ownership when clipboard is changed by a client .","title":"Contributing"},{"location":"about/contributing/#creating-an-issue","text":"You can create issues in our issue tracker . If you report a bug , please either describe reproduction steps or mention that you don't know how to reproduce it stably. You can also suggest a feature . If you've found the same ticket, please avoid creating a duplicate. Better vote (and comment with more info) for the existing!","title":"Creating an issue"},{"location":"about/contributing/#submitting-changes","text":"If you want to resolve an issue submitted in the issue tracker or propose a minor edit , open a Pull Request. Better don't include multiple changes in a single PR, create separate. Pre-commit actions . Before committing, please ensure that code style is correct. If you use IntelliJ IDEA, you can just select the following checkboxes of \"Before Commit\" actions: Reformat code Rearrange code Optimize imports Cleanup Commits naming . If there are issues that you address, please mention them in the prefix of commit messages. Usually, a commit name starts with a verb. Example: PRJ-68 Make clipboard owners lose ownership when clipboard is changed by a client .","title":"Submitting changes"},{"location":"about/versions/","text":"Versions \u00b6 Projector currently doesn't have consistent versioning. It's yet to decide ( PRJ-34 ). Currently, each subproject uses its own versions. Changelogs \u00b6 projector-plugin . projector-server . projector-installer . projector-launcher . If we decide to make the versions the same for all the projects, the changelog will be moved here.","title":"Versions"},{"location":"about/versions/#versions","text":"Projector currently doesn't have consistent versioning. It's yet to decide ( PRJ-34 ). Currently, each subproject uses its own versions.","title":"Versions"},{"location":"about/versions/#changelogs","text":"projector-plugin . projector-server . projector-installer . projector-launcher . If we decide to make the versions the same for all the projects, the changelog will be moved here.","title":"Changelogs"},{"location":"dev_guide/todo/","text":"Leave only minimal info in READMEs of repos and give links to here.","title":"TODO"},{"location":"ij_user_guide/accessing/","text":"Accessing remote app (client) \u00b6 To access a remotely run app, you need to use a client. There are multiple variants available. Client Supported platforms Web browser Any Client app (\"launcher\") Windows, Linux, MacOS Web browser \u00b6 Bundled client \u00b6 Recent versions of servers have bundled client files. So for example if you start a server on port 9999, you can access it via a browser locally opening http://localhost:9999/ (or https://... if your server is secure). If your server is located remotely, just use the corresponding host address instead of localhost . GitHub Pages client \u00b6 The latest client is always available at GitHub Pages: https://JetBrains.github.io/projector-client/?host=HOST&port=PORT . So this variant is useful if you want to check out the recent update in the client. You should set HOST and PORT matching your server. For the previous example, it will be https://JetBrains.github.io/projector-client/?host=localhost&port=9999 . Secure connection is required for GitHub client Your server must be secure when using GitHub client because GitHub is secure itself. Before connection, make sure that your browser trusts the certificate you use on your server (in this case, connection via the bundled client should succeed). For more info, read below . Known issues \u00b6 Due to limitations of web browsers, there are some issues in the Web Client. They can be solved via native implementations of the client. iPad as a client \u00b6 iPads don't support self-signed WebSockets, so if you want to use a browser on iPad as a client, you now have to disable security on the server. Some hotkeys are intercepted by the browser \u00b6 For example, Ctrl+Q in Windows/Linux or Cmd+N in Mac is handled by the browser. Since some shortcuts close the tab or the window, we implemented a confirmation which is shown when the page is about to close (if blockClosing parameter is enabled). Also, we consider Ctrl+Q shortcut as frequently used, so we mapped it to the F1 button. It seems that we can't do anything more about that, at least in a normal browser window. The proposed workaround here is to you the feature of browsers called PWA . It's a way to install a web page as a separate application. We've tested it in Chrome and in this mode, all the tested shortcuts are handled by Projector, not by the browser. The instructions are as follows: simply create a shortcut by selecting Menu | More Tools | Create Shortcut... and Open as window . Instructions with screenshots can be googled, for example, this one . The similar can be achieved in Firefox: for example, take this instruction. Incomplete clipboard synchronization \u00b6 There are some limitations with clipboard. To-server \u00b6 When your clipboard is changed on the client side, the server needs to apply the change on its side. We implement it on the client side via setting \"paste\" listener . So clipboard is updated on the server only if you invoke that listener, for example, by hitting Ctrl+V or Ctrl+Shift+V. If you have an application on the server side with a \"paste\" button, a click on it can paste outdated information unless the listener wasn't invoked . Unfortunately, we can't just continuously get clipboard data from window.navigator.clipboard and send it to the server because when it's invoked not from user's context, there will be alert from the browser like \"the site wants to read clipboard info, do you grant?\". To-client \u00b6 It's vice versa: when your clipboard is changed on the server side, the client needs to apply the change on its side. We set the clipboard on the client side via window.navigator.clipboard . This doesn't work in insecure contexts , so the client needs to be opened using HTTPS or on localhost to support this . We can't use \"copy\" listener because when this event is generated, we don't have a message from the server with actual clipboard data yet. Also, this method won't work if you click a \"copy\" button in your application. It's not possible to connect to insecure WebSocket from a secure web page \u00b6 This is a limitation of browsers. So for example you can't use GitHub Pages client to access an insecure server. Advanced options and shortcuts \u00b6 The web client has some hidden options and keyboard shortcuts . Please use the links if you want to know more info. In the future, welcome screen ( PRJ-126 ) and actions panel ( PRJ-248 ) will make these features more explicit. Client app (\"launcher\") \u00b6 Also, we have a special app called launcher that wraps web page and allows to overcome some limitations of web browsers such as shortcut interception and low performance . Currently, it's a small app, and it's easy to use. It has just a single text field for the URL you want to connect. Downloading \u00b6 Please check releases beginning with the launcher- prefix. Download the file for your OS. Running \u00b6 After unpacking the archive, run the executable file corresponding to your OS (see below). If you don't want to specify the URL in the GUI every time, you can create a shortcut or run this app from command line passing the URL as the first argument. Windows \u00b6 Run projector.exe file. Linux \u00b6 Run projector file. Mac \u00b6 Run projector app (on other OSes it's visible like projector.app dir). Mac doesn't allow unsigned apps to be run easily, and will ask you to put the app to Trash Bin. So you need to select \"Open Anyway\" in System Preferences to allow launching.","title":"Accessing remote app \u2013 clients"},{"location":"ij_user_guide/accessing/#accessing-remote-app-client","text":"To access a remotely run app, you need to use a client. There are multiple variants available. Client Supported platforms Web browser Any Client app (\"launcher\") Windows, Linux, MacOS","title":"Accessing remote app (client)"},{"location":"ij_user_guide/accessing/#web-browser","text":"","title":"Web browser"},{"location":"ij_user_guide/accessing/#bundled-client","text":"Recent versions of servers have bundled client files. So for example if you start a server on port 9999, you can access it via a browser locally opening http://localhost:9999/ (or https://... if your server is secure). If your server is located remotely, just use the corresponding host address instead of localhost .","title":"Bundled client"},{"location":"ij_user_guide/accessing/#github-pages-client","text":"The latest client is always available at GitHub Pages: https://JetBrains.github.io/projector-client/?host=HOST&port=PORT . So this variant is useful if you want to check out the recent update in the client. You should set HOST and PORT matching your server. For the previous example, it will be https://JetBrains.github.io/projector-client/?host=localhost&port=9999 . Secure connection is required for GitHub client Your server must be secure when using GitHub client because GitHub is secure itself. Before connection, make sure that your browser trusts the certificate you use on your server (in this case, connection via the bundled client should succeed). For more info, read below .","title":"GitHub Pages client"},{"location":"ij_user_guide/accessing/#known-issues","text":"Due to limitations of web browsers, there are some issues in the Web Client. They can be solved via native implementations of the client.","title":"Known issues"},{"location":"ij_user_guide/accessing/#ipad-as-a-client","text":"iPads don't support self-signed WebSockets, so if you want to use a browser on iPad as a client, you now have to disable security on the server.","title":"iPad as a client"},{"location":"ij_user_guide/accessing/#some-hotkeys-are-intercepted-by-the-browser","text":"For example, Ctrl+Q in Windows/Linux or Cmd+N in Mac is handled by the browser. Since some shortcuts close the tab or the window, we implemented a confirmation which is shown when the page is about to close (if blockClosing parameter is enabled). Also, we consider Ctrl+Q shortcut as frequently used, so we mapped it to the F1 button. It seems that we can't do anything more about that, at least in a normal browser window. The proposed workaround here is to you the feature of browsers called PWA . It's a way to install a web page as a separate application. We've tested it in Chrome and in this mode, all the tested shortcuts are handled by Projector, not by the browser. The instructions are as follows: simply create a shortcut by selecting Menu | More Tools | Create Shortcut... and Open as window . Instructions with screenshots can be googled, for example, this one . The similar can be achieved in Firefox: for example, take this instruction.","title":"Some hotkeys are intercepted by the browser"},{"location":"ij_user_guide/accessing/#incomplete-clipboard-synchronization","text":"There are some limitations with clipboard.","title":"Incomplete clipboard synchronization"},{"location":"ij_user_guide/accessing/#to-server","text":"When your clipboard is changed on the client side, the server needs to apply the change on its side. We implement it on the client side via setting \"paste\" listener . So clipboard is updated on the server only if you invoke that listener, for example, by hitting Ctrl+V or Ctrl+Shift+V. If you have an application on the server side with a \"paste\" button, a click on it can paste outdated information unless the listener wasn't invoked . Unfortunately, we can't just continuously get clipboard data from window.navigator.clipboard and send it to the server because when it's invoked not from user's context, there will be alert from the browser like \"the site wants to read clipboard info, do you grant?\".","title":"To-server"},{"location":"ij_user_guide/accessing/#to-client","text":"It's vice versa: when your clipboard is changed on the server side, the client needs to apply the change on its side. We set the clipboard on the client side via window.navigator.clipboard . This doesn't work in insecure contexts , so the client needs to be opened using HTTPS or on localhost to support this . We can't use \"copy\" listener because when this event is generated, we don't have a message from the server with actual clipboard data yet. Also, this method won't work if you click a \"copy\" button in your application.","title":"To-client"},{"location":"ij_user_guide/accessing/#its-not-possible-to-connect-to-insecure-websocket-from-a-secure-web-page","text":"This is a limitation of browsers. So for example you can't use GitHub Pages client to access an insecure server.","title":"It's not possible to connect to insecure WebSocket from a secure web page"},{"location":"ij_user_guide/accessing/#advanced-options-and-shortcuts","text":"The web client has some hidden options and keyboard shortcuts . Please use the links if you want to know more info. In the future, welcome screen ( PRJ-126 ) and actions panel ( PRJ-248 ) will make these features more explicit.","title":"Advanced options and shortcuts"},{"location":"ij_user_guide/accessing/#client-app-launcher","text":"Also, we have a special app called launcher that wraps web page and allows to overcome some limitations of web browsers such as shortcut interception and low performance . Currently, it's a small app, and it's easy to use. It has just a single text field for the URL you want to connect.","title":"Client app (\"launcher\")"},{"location":"ij_user_guide/accessing/#downloading","text":"Please check releases beginning with the launcher- prefix. Download the file for your OS.","title":"Downloading"},{"location":"ij_user_guide/accessing/#running","text":"After unpacking the archive, run the executable file corresponding to your OS (see below). If you don't want to specify the URL in the GUI every time, you can create a shortcut or run this app from command line passing the URL as the first argument.","title":"Running"},{"location":"ij_user_guide/accessing/#windows","text":"Run projector.exe file.","title":"Windows"},{"location":"ij_user_guide/accessing/#linux","text":"Run projector file.","title":"Linux"},{"location":"ij_user_guide/accessing/#mac","text":"Run projector app (on other OSes it's visible like projector.app dir). Mac doesn't allow unsigned apps to be run easily, and will ask you to put the app to Trash Bin. So you need to select \"Open Anyway\" in System Preferences to allow launching.","title":"Mac"},{"location":"ij_user_guide/jetbrains/","text":"JetBrains IDEs \u00b6 Current JetBrains IDEs use Swing to draw GUI . The same is true for other IntelliJ-based apps like Android Studio . Therefore, Projector that is a technology for rendering Swing GUI over the network is a good way to run and access these apps remotely. It should be compatible with all existing JetBrains IDEs. This section of documentation describes how Projector is adapted to IntelliJ-based apps. Use cases \u00b6 We believe there are many cases when you may want to use Projector. Let's enumerate some of them to inspire you: Running the code from IDE located near the runtime (whatever it is) or near the database to reduce roundtrips; High-security zones and corporate environments; Really huge projects ; No source code on a laptop; Slow or hot users\u2019 laptops ; Thin clients and cheap hardware like Android tablets; Running the IDE in a GNU/Linux environment on Windows machines or even on exotic operating systems like ChromeOS; The ability to turn off your computer, while your app continues to work on the server; Slow internet connection; Remote debugging on a server-side (devtest, devprod); VM or Docker images with debug sources and pre-configured IDE. Any configuration that requires remote access. IntelliJ IDEA on Android tablet (Huawei MediaPad M5) Quick start \u00b6 You should decide how you run a remote IDE and how you access it. This info is given at servers and clients pages respectively. TODO: give tl;dr (docker and bundled client).","title":"JetBrains IDEs"},{"location":"ij_user_guide/jetbrains/#jetbrains-ides","text":"Current JetBrains IDEs use Swing to draw GUI . The same is true for other IntelliJ-based apps like Android Studio . Therefore, Projector that is a technology for rendering Swing GUI over the network is a good way to run and access these apps remotely. It should be compatible with all existing JetBrains IDEs. This section of documentation describes how Projector is adapted to IntelliJ-based apps.","title":"JetBrains IDEs"},{"location":"ij_user_guide/jetbrains/#use-cases","text":"We believe there are many cases when you may want to use Projector. Let's enumerate some of them to inspire you: Running the code from IDE located near the runtime (whatever it is) or near the database to reduce roundtrips; High-security zones and corporate environments; Really huge projects ; No source code on a laptop; Slow or hot users\u2019 laptops ; Thin clients and cheap hardware like Android tablets; Running the IDE in a GNU/Linux environment on Windows machines or even on exotic operating systems like ChromeOS; The ability to turn off your computer, while your app continues to work on the server; Slow internet connection; Remote debugging on a server-side (devtest, devprod); VM or Docker images with debug sources and pre-configured IDE. Any configuration that requires remote access. IntelliJ IDEA on Android tablet (Huawei MediaPad M5)","title":"Use cases"},{"location":"ij_user_guide/jetbrains/#quick-start","text":"You should decide how you run a remote IDE and how you access it. This info is given at servers and clients pages respectively. TODO: give tl;dr (docker and bundled client).","title":"Quick start"},{"location":"ij_user_guide/running/","text":"Running remote app (server) \u00b6 To run an app with Projector, you need to create a server. There are multiple variants available. Variant Supported platforms Mode installer Linux Headless Docker Any Headless IDE Plugin Any GUI Mode \u00b6 There are two ways of how the server is run: GUI mode \u2013 you can see the app where you launch it, and also connect to it remotely at the same time. Headless mode \u2013 you can't see the app, you only can connect remotely. Differences \u00b6 You may wonder what to choose. Let's describe some differences that should help you decide. Currently, headless mode is available only on Linux (or inside Docker). On the other hand, GUI mode is available everywhere. Headless mode doesn't require Desktop Environment nor XServer nor virtual framebuffer to be available on the device, while GUI mode in Linux obviously does. Headless mode can adapt to the connected client machine better, especially when the client has different screen parameters (DPI, resolution). installer \u00b6 TODO: https://github.com/JetBrains/projector-installer Docker \u00b6 TODO: https://github.com/JetBrains/projector-docker IDE Plugin \u00b6 TODO: https://github.com/JetBrains/projector-server/tree/master/projector-plugin","title":"Running remote app \u2013 servers"},{"location":"ij_user_guide/running/#running-remote-app-server","text":"To run an app with Projector, you need to create a server. There are multiple variants available. Variant Supported platforms Mode installer Linux Headless Docker Any Headless IDE Plugin Any GUI","title":"Running remote app (server)"},{"location":"ij_user_guide/running/#mode","text":"There are two ways of how the server is run: GUI mode \u2013 you can see the app where you launch it, and also connect to it remotely at the same time. Headless mode \u2013 you can't see the app, you only can connect remotely.","title":"Mode"},{"location":"ij_user_guide/running/#differences","text":"You may wonder what to choose. Let's describe some differences that should help you decide. Currently, headless mode is available only on Linux (or inside Docker). On the other hand, GUI mode is available everywhere. Headless mode doesn't require Desktop Environment nor XServer nor virtual framebuffer to be available on the device, while GUI mode in Linux obviously does. Headless mode can adapt to the connected client machine better, especially when the client has different screen parameters (DPI, resolution).","title":"Differences"},{"location":"ij_user_guide/running/#installer","text":"TODO: https://github.com/JetBrains/projector-installer","title":"installer"},{"location":"ij_user_guide/running/#docker","text":"TODO: https://github.com/JetBrains/projector-docker","title":"Docker"},{"location":"ij_user_guide/running/#ide-plugin","text":"TODO: https://github.com/JetBrains/projector-server/tree/master/projector-plugin","title":"IDE Plugin"},{"location":"swing_user_guide/arbitrary/","text":"Arbitrary Swing app \u00b6 Here you can find instructions how to use an arbitrary Swing app with Projector. This page isn't ready, but as for a server, you can find instructions here: Running your app headlessly: projector-server . Running your app with GUI: projector-agent . Demo Swing app that can be run using these methods: projector-demo . Info on clients is the same as for JetBrains IDEs . If the instructions don't answer your questions and/or you want us to finish this page, feel free to open a ticket at our issue tracker .","title":"Arbitrary Swing app"},{"location":"swing_user_guide/arbitrary/#arbitrary-swing-app","text":"Here you can find instructions how to use an arbitrary Swing app with Projector. This page isn't ready, but as for a server, you can find instructions here: Running your app headlessly: projector-server . Running your app with GUI: projector-agent . Demo Swing app that can be run using these methods: projector-demo . Info on clients is the same as for JetBrains IDEs . If the instructions don't answer your questions and/or you want us to finish this page, feel free to open a ticket at our issue tracker .","title":"Arbitrary Swing app"}]}