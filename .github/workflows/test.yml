name: Tests

on:
  push:
    branches: [master]
  pull_request:
    types: [ assigned, opened, synchronize, reopened ]
    branches: [master]

jobs:
  test-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: browser-actions/setup-chrome@latest
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: gradle/wrapper-validation-action@v1
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Clean
        run: ./gradlew clean
      - name: Add JVM args for gradle
        run: echo org.gradle.jvmargs=-Xmx4096m -XX:MaxMetaspaceSize=512m >> gradle.properties
      - name: Run Tests and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sudo apt-get install numlockx xdotool
          export CHROME_BIN=/$(which chromium)
          export DISPLAY=:99.0
          Xvfb -ac :99 -screen 0 1920x1080x16 &
          ./gradlew check --info
          ./gradlew :projector-server-core:jacocoTestReport
          ./gradlew :projector-common:jacocoTestReport
          ./gradlew :projector-agent-common:jacocoTestReport
          ./gradlew :projector-agent-ij-injector:jacocoTestReport
          ./gradlew :projector-client-common:jacocoTestReport
          ./gradlew :projector-util-agent:jacocoTestReport
          ./gradlew sonarqube
#          ./gradlew :projector-client-web:browserTest

# TODO: fix integration tests
#  test-mac-os:
#    runs-on: macos-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: gradle/wrapper-validation-action@v1
#      - name: Setup Java
#        uses: actions/setup-java@v1
#        with:
#          java-version: '11'
#      - name: Clean
#        run: gradle clean
#      - name: Run tests
#        run: |
#          export CHROME_BIN=$(which chrome)
#          ./gradlew check
#          ./gradlew :projector-server-core:jacocoTestReport
#          ./gradlew :projector-common:jacocoTestReport
#          ./gradlew :projector-agent-common:jacocoTestReport
#          ./gradlew :projector-agent-ij-injector:jacocoTestReport
#          ./gradlew :projector-client-common:jacocoTestReport
#          ./gradlew :projector-util-agent:jacocoTestReport
##          ./gradlew :projector-client-web:browserTest
#      - name: test coverage
#        uses: codecov/codecov-action@v1
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
#          directory: ./JacocoReports/

# TODO: understand why windows tests hang
#  test-windows:
#    runs-on: windows-latest
#    steps:
#      - uses: browser-actions/setup-chrome@latest
#      - uses: actions/checkout@v2
#      - uses: gradle/wrapper-validation-action@v1
#      - name: Setup Java
#        uses: actions/setup-java@v1
#        with:
#          java-version: '11'
#      - name: Clean
#        run: gradle clean
#      - name: Run tests
#        run: |
#          $Env:CHROME_BIN = 'c:\hostedtoolcache\windows\chromium\latest\x64\chrome.exe'
#          ./gradlew :projector-server-core:integrationTest  --tests "org.jetbrains.projector.intTest.headless.*"
#          ./gradlew :projector-server-core:integrationTest  --tests "org.jetbrains.projector.intTest.lowLevelKeyboard.*"
#          ./gradlew :projector-client-web:browserTest
